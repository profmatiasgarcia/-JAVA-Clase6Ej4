package Concesionaria;
/**
 * @author Prof Matias Garcia.
 * <p> Copyright (C) 2017 para <a href = "https://www.profmatiasgarcia.com.ar/"> www.profmatiasgarcia.com.ar </a>
 * - con licencia GNU GPL3.
 * <p> Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo los términos de la
 * Licencia Pública General de GNU según es publicada por la Free Software Foundation, 
 * bien con la versión 3 de dicha Licencia o bien (según su elección) con cualquier versión posterior. 
 * Este programa se distribuye con la esperanza de que sea útil, pero SIN NINGUNA GARANTÍA, 
 * incluso sin la garantía MERCANTIL implícita o sin garantizar la CONVENIENCIA PARA UN PROPÓSITO
 * PARTICULAR. Véase la Licencia Pública General de GNU para más detalles.
 * Debería haber recibido una copia de la Licencia Pública General junto con este programa. 
 * Si no ha sido así ingrese a <a href = "http://www.gnu.org/licenses/"> GNU org </a>
 */
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class CompradoresVentana extends javax.swing.JInternalFrame {

    // Atributo para manejar si hay una ventana abierta de este tipo
    public static boolean abierta = false;

    // Modelo de datos para lista de compradores
    DefaultListModel modeloCompradores = new DefaultListModel();

    public CompradoresVentana() {

        // Llama al constructor de la superclase y establece las caracteristicas de ventana
        super("Administracion de Compradores",
                true, //resizable
                true, //closable
                true, //maximizable
                true);//iconifiable

        // Establece en true el atributo abierto representando que hay una ventana de este tipo abierta
        abierta = true;

        // Invoca al metodo initComponents()
        initComponents();

        // Relaciona el modelo de compradores con la lista de compradores
        listCompradores.setModel(modeloCompradores);
    }

    public boolean validarFormulario() {

        // Valida que el nombre no este vacio
        if (txtNombre.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "El nombre no puede estar vacio!", "Guardar", JOptionPane.WARNING_MESSAGE);
            txtNombre.requestFocus();
            return false;
        }

        // Valida que el apellido no este vacio
        if (txtApellido.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "El apellido no puede estar vacio!", "Guardar", JOptionPane.WARNING_MESSAGE);
            txtApellido.requestFocus();
            return false;
        }

        // Valida que el DNI no este vacio
        if (txtDni.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "El DNI no puede estar vacio!", "Guardar", JOptionPane.WARNING_MESSAGE);
            txtDni.requestFocus();
            return false;
        }

        // Valida que el presupuesto no este vacio
        if (txtPresupuesto.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "El presupuesto no puede estar vacio!", "Guardar", JOptionPane.WARNING_MESSAGE);
            txtPresupuesto.requestFocus();
            return false;
        }

        // Valida que el presupuesto sea un numero que puede tener decimales
        try {
            Double.parseDouble(txtPresupuesto.getText());
        } catch (Exception NumberFormatException) {
            JOptionPane.showMessageDialog(this, "El presupuesto debe ser un numero!", "Guardar", JOptionPane.WARNING_MESSAGE);
            txtPresupuesto.requestFocus();
            return false;
        }

        return true;
    }

    public void limpiarFormulario() {
        txtNombre.setText("");
        txtApellido.setText("");
        txtDni.setText("");
        txtPresupuesto.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listCompradores = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtDni = new javax.swing.JTextField();
        txtPresupuesto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnCerrar = new javax.swing.JButton();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Compradores"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        listCompradores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listCompradoresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listCompradores);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 20, 162, 136));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabel1.setText("Nombre");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(236, 39, -1, -1));

        jLabel2.setText("Apellido");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(237, 77, -1, -1));

        jLabel3.setText("DNI");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 116, -1, -1));
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(308, 36, 171, -1));
        getContentPane().add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(308, 74, 171, -1));
        getContentPane().add(txtDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(308, 116, 171, -1));
        getContentPane().add(txtPresupuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(308, 157, 171, -1));

        jLabel4.setText("Presupuesto");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 160, -1, -1));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 209, -1, -1));

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 209, -1, -1));

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 209, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 193, 473, 10));

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(404, 209, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        // Si hay un elemento seleccionado, lo elimina
        if (listCompradores.getSelectedIndex() != -1) {

            // Consulta si desea eliminar el item
            int rta = JOptionPane.showConfirmDialog(this, "Desea eliminar al comprador " + listCompradores.getSelectedValue() + " ?", "Eliminar", JOptionPane.YES_NO_OPTION);

            // Si no desea borrarlo, entonces no lo borra
            if (rta == JOptionPane.NO_OPTION) {
                return;
            }

            // Elimina el comprador
            modeloCompradores.remove(listCompradores.getSelectedIndex());

            // Deshabilita el boton 'eliminar'
            btnEliminar.setEnabled(false);

            // Deshabilita el boton 'guardar'
            btnGuardar.setEnabled(false);

            // Limpia el formulario
            limpiarFormulario();

            // Informa que el comprador ha sido eliminado
            JOptionPane.showMessageDialog(this, "El comprador ha sido eliminado!", "Eliminar", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void listCompradoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listCompradoresMouseClicked

        // Activa el boton 'eliminar'
        btnEliminar.setEnabled(true);

        // Activa el boton 'guardar'
        btnGuardar.setEnabled(true);

        // Obtiene el item seleccionado
        Comprador c = (Comprador) listCompradores.getSelectedValue();

        // Completa las cajas de texto segun el elemento
        txtNombre.setText(c.getNombre());
        txtApellido.setText(c.getApellido());
        txtDni.setText(c.getNumeroDocumento());
        txtPresupuesto.setText(String.valueOf(c.getPresupuesto()));

    }//GEN-LAST:event_listCompradoresMouseClicked

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        // Variables
        boolean esNuevo = true;

        // Valida el formulario
        boolean validacionOk = validarFormulario();

        // Si el formulario es valido, informa
        if (validacionOk) {

            // Instancia un vendedor
            Comprador c = new Comprador();

            // Si hay un item seleccionado lo obtiene
            if (listCompradores.getSelectedIndex() != -1) {
                c = (Comprador) listCompradores.getSelectedValue();
                esNuevo = false;
            }

            // Agrega el comprador a la lista de compradores
            c.setNombre(txtNombre.getText());
            c.setApellido(txtApellido.getText());
            c.setNumeroDocumento(txtDni.getText());
            c.setPresupuesto(Double.parseDouble(txtPresupuesto.getText()));

            // Si es un comprador nuevo lo agrega
            if (esNuevo) {
                modeloCompradores.addElement(c);
            }

            // Limpia el formulario
            limpiarFormulario();

            //  Desactiva boton 'guardar'
            btnGuardar.setEnabled(false);

            //  Desactiva boton 'eliminar'
            btnEliminar.setEnabled(false);

            // Activa boton 'nuevo'
            btnNuevo.setEnabled(true);

            // Establece el foco en el boton 'nuevo'
            btnNuevo.requestFocus();

            // No deja ningun item seleccionado en la lista
            listCompradores.clearSelection();

            // Infoma OK!
            JOptionPane.showMessageDialog(this, "El comprador ha sido guardado!", "Guardar", JOptionPane.INFORMATION_MESSAGE);

        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed

        // Limpia las cajas de texto
        limpiarFormulario();

        // Deshabilita boton 'nuevo'
        btnNuevo.setEnabled(false);

        // Deshabilita boton 'eliminar'
        btnEliminar.setEnabled(false);

        // Habilita boton guardar
        btnGuardar.setEnabled(true);

        // Ubica el curso en la primer caja de texto
        txtNombre.requestFocus();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed

        // Cuando cierra la ventana, establece 'abierto' en falso
        abierta = false;

    }//GEN-LAST:event_formInternalFrameClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList listCompradores;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPresupuesto;
    // End of variables declaration//GEN-END:variables

}
